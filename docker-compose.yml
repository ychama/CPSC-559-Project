version: "3.8"

services:
  database1:
    image: mongo
    restart: unless-stopped
    volumes:
      - ./mongo-data-1:/data/db
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example

  database2:
    image: mongo
    restart: unless-stopped
    volumes:
      - ./mongo-data-2:/data/db
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example

  database3:
    image: mongo
    restart: unless-stopped
    volumes:
      - ./mongo-data-3:/data/db
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example

  database4:
    image: mongo
    restart: unless-stopped
    volumes:
      - ./mongo-data-4:/data/db
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example

  mongo-express1:
    image: mongo-express
    restart: unless-stopped
    ports:
      - 8081:8081
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: example
      ME_CONFIG_MONGODB_URL: mongodb://root:example@database1:27017/

  mongo-express2:
    image: mongo-express
    restart: unless-stopped
    ports:
      - 8082:8081
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: example
      ME_CONFIG_MONGODB_URL: mongodb://root:example@database2:27017/

  mongo-express3:
    image: mongo-express
    restart: unless-stopped
    ports:
      - 8083:8081
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: example
      ME_CONFIG_MONGODB_URL: mongodb://root:example@database3:27017/

  mongo-express4:
    image: mongo-express
    restart: unless-stopped
    ports:
      - 8084:8081
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: example
      ME_CONFIG_MONGODB_URL: mongodb://root:example@database4:27017/

  backend1:
    build: ./backend
    restart: unless-stopped
    ports:
      - 5001:5000
    environment:
      SERVER_ID: 1
      OTHER_SERVERS: 2,3,4
      SERVER_BASE_URL: http://backend{}:5000/api
      MONGO_URI: mongodb://root:example@database1:27017/

  backend2:
    build: ./backend
    restart: unless-stopped
    ports:
      - 5002:5000
    environment:
      SERVER_ID: 2
      OTHER_SERVERS: 1,3,4
      SERVER_BASE_URL: http://backend{}:5000/api
      MONGO_URI: mongodb://root:example@database2:27017/

  backend3:
    build: ./backend
    restart: unless-stopped
    ports:
      - 5003:5000
    environment:
      SERVER_ID: 3
      OTHER_SERVERS: 1,2,4
      SERVER_BASE_URL: http://backend{}:5000/api
      MONGO_URI: mongodb://root:example@database3:27017/

  backend4:
    build: ./backend
    restart: unless-stopped
    ports:
      - 5004:5000
    environment:
      SERVER_ID: 4
      OTHER_SERVERS: 1,2,3
      SERVER_BASE_URL: http://backend{}:5000/api
      MONGO_URI: mongodb://root:example@database4:27017/

  frontend1:
    build:
      context: ./frontend
      args:
        REACT_APP_BACKEND_URL: http://localhost:5001/api
    depends_on:
      - backend1
    ports:
      - 3001:3000

  frontend2:
    build:
      context: ./frontend
      args:
        REACT_APP_BACKEND_URL: http://localhost:5002/api
    depends_on:
      - backend2
    ports:
      - 3002:3000

  frontend3:
    build:
      context: ./frontend
      args:
        REACT_APP_BACKEND_URL: http://localhost:5003/api
    depends_on:
      - backend3
    ports:
      - 3003:3000

  frontend4:
    build:
      context: ./frontend
      args:
        REACT_APP_BACKEND_URL: http://localhost:5004/api
    depends_on:
      - backend4
    ports:
      - 3004:3000
